@using Domain.Databases
@using Domain.DataTransfareObject
@using System.Globalization
@using WorkFlowClient.Services.Interfaces
@inject IShiftService _shiftservice
@inject IUserService _userservice
@inject HttpClient Http

<div class="shifts-requests">
    <h3>طلبات الشفتات</h3>

    @if (isLoading)
    {
        <p>⏳ جاري تحميل الشفتات...</p>
    }
    else if (PendingShifts?.Any() != true)
    {
        <p class="empty">لا يوجد شفتات بانتظار الموافقة.</p>
    }
    else
    {
        <div class="shift-list">
            @foreach (var shift in PendingShifts)
            {
                var isSuspicious = shift.StartTime.Date != shift.EndTime.Date;

                <div class="shift-card @(isSuspicious ? "suspicious" : "")">
                    <div class="shift-header">
                        <strong>@shift.User?.Name</strong>
                        <span class="phone">@shift.User?.PhonNumber</span>
                    </div>

                    <div class="shift-body">
                        <div class="shift-info">
                            <p>🕒 <b>البدء:</b> @shift.StartTime.ToString("dd/MM/yyyy HH:mm")</p>
                            <p>🕒 <b>الانتهاء:</b> @shift.EndTime.ToString("dd/MM/yyyy HH:mm")</p>
                        </div>

                        <div class="shift-media">
                            <!-- صورة الإثبات -->
                            <img src="@($"https://localhost:7246/api/Shift/ShiftImage/{shift.Id}")"
                                 alt="إثبات الشيفت"
                                 style="max-width:300px; max-height:300px; border-radius:8px; object-fit:contain;" />
                            @if (shift.Latitude != 0 && shift.Longitude != 0)
                            {
                            <iframe width="100%"
                                    height="200"
                                    style="border:0"
                                    allowfullscreen=""
                                    loading="lazy"
                                    src=@($"https://www.google.com/maps/embed/v1/view?key=AIzaSyBz8x28heKHno88pp3LYjWspQ2N0zwS40c&center={shift.Latitude.ToString(CultureInfo.InvariantCulture)},{shift.Longitude.ToString(CultureInfo.InvariantCulture)}&zoom=15&maptype=roadmap")>
                            </iframe>
                            }
                        </div>
                    </div>

                    <div class="shift-actions">
                        <button class="btn accept" @onclick="() => ChangeStatus(shift.Id, ShiftStatus.Acepted)">قبول</button>
                        <button class="btn reject" @onclick="() => ChangeStatus(shift.Id, ShiftStatus.referd)">رفض</button>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<shiftModel> PendingShifts = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var res = await _shiftservice.GetAllShiftsAsync();
        if (res.IsSucceeded && res.Value != null)
        {
            var all = res.Value
                .Where(s => s.ShiftStatus == ShiftStatus.pending && s.Latitude != 0 && s.Longitude != 0)
                .ToList();

            // جلب معلومات المستخدم لكل شفت
            foreach (var shift in all)
            {
                var userRes = await _userservice.GetUserByIdAsync(shift.UserId);
                if (userRes.IsSucceeded)
                    shift.User = userRes.Value;
            }

            PendingShifts = all;
        }
        isLoading = false;
    }

    private async Task ChangeStatus(int shiftId, ShiftStatus status)
    {
        var res = await _shiftservice.ModfiyStatusAsync(new ModfiyShiftStatusDto
        {
            ShiftId = shiftId,
            NewStatus = status
        });

        if (res.IsSucceeded)
        {
            PendingShifts = PendingShifts.Where(s => s.Id != shiftId).ToList();
            StateHasChanged();
        }
    }
}
